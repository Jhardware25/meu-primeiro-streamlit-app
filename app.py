import streamlit as st
import numpy_financial as npf # Biblioteca para c√°lculos financeiros como PMT

# --- Configura√ß√µes da P√°gina ---
st.set_page_config(
    page_title="Simulador de Cr√©dito com Garantia",
    page_icon="üí∞",
    layout="centered" # "wide" para tela cheia, "centered" para layout centralizado
)

# --- T√≠tulo e Descri√ß√£o ---
st.title("üí∞ Simulador de Cr√©dito Empresarial com Garantia")
st.markdown("Preencha os campos abaixo para simular as vantagens de utilizar sua aplica√ß√£o em renda fixa como garantia na opera√ß√£o de cr√©dito.")
st.markdown("---")

# --- Se√ß√£o de Entrada de Dados ---
st.header("Dados da Opera√ß√£o de Cr√©dito")

valor_credito = st.number_input(
    "Valor do Cr√©dito Desejado (R$):",
    min_value=1000.0,
    value=200000.0,
    step=1000.0,
    format="%.2f"
)

prazo_credito_meses = st.slider(
    "Prazo do Cr√©dito (meses):",
    min_value=1,
    max_value=120, # At√© 10 anos
    value=36,
    step=1
)
taxa_juros_credito_input = st.number_input(
    "Taxa de Juros do Cr√©dito (com garantia) (% ao m√™s):", # Alterado para ao m√™s
    min_value=0.01, # M√≠nimo 0.01% para evitar divis√£o por zero/problemas
    max_value=5.0, # Ex: at√© 5% a.m. (ajuste conforme necess√°rio)
    value=1.2, # Exemplo: 1.2% a.m.
    step=0.01,
    format="%.2f"
)
# Converte para decimal para c√°lculos
taxa_juros_credito_mensal = taxa_juros_credito_input / 100

iof_percentual = st.number_input(
    "IOF (% sobre o valor do cr√©dito):",
    min_value=0.0,
    max_value=10.0,
    value=3.95, # Valor padr√£o sugerido: 3.95%
    step=0.01,
    format="%.2f"
)

tac_valor = st.number_input(
    "TAC - Tarifa de Abertura de Cr√©dito (R$):",
    min_value=0.0,
    value=0.0, # Valor padr√£o sugerido: 0.00
    step=1.0,
    format="%.2f"
)
st.markdown("---")

st.header("Dados da Aplica√ß√£o Financeira (Garantia)")

valor_aplicacao = st.number_input(
    "Valor da Aplica√ß√£o em Renda Fixa (R$):",
    min_value=1000.0,
    value=400000.0,
    step=1000.0,
    format="%.2f"
)

taxa_rendimento_aplicacao_input = st.number_input(
    "Taxa de Rendimento da Aplica√ß√£o (% ao m√™s):", # Alterado para ao m√™s
    min_value=0.01, # M√≠nimo 0.01%
    max_value=2.0, # Ex: at√© 2% a.m. (ajuste conforme necess√°rio)
    value=0.8, # Exemplo: 0.8% a.m.
    step=0.01,
    format="%.2f"
)
# Converte para decimal para c√°lculos
taxa_rendimento_aplicacao_mensal = taxa_rendimento_aplicacao_input / 100

ir_aliquota = st.slider(
    "Al√≠quota de Imposto de Renda (IR) sobre Rendimento da Aplica√ß√£o (%):",
    min_value=0.0,
    max_value=22.5, # Al√≠quota m√°xima comum para RF de longo prazo
    value=15.0, # Exemplo: para prazos acima de 720 dias
    step=0.5
) / 100 # Converte para decimal

st.markdown("---")

# --- Bot√£o de Calcular ---
if st.button("Simular Opera√ß√£o"):
    # --- C√°lculos da Opera√ß√£o de Cr√©dito ---
    # Calcular IOF
    iof_total = valor_credito * (iof_percentual / 100)

    # Valor l√≠quido recebido pelo cliente (ap√≥s IOF e TAC)
    valor_liquido_recebido = valor_credito - iof_total - tac_valor

    # Calcular a parcela usando numpy_financial.pmt (pagamento mensal de uma anuidade)
    # npf.pmt(rate, nper, pv)
    # rate = taxa de juros por per√≠odo
    # nper = n√∫mero total de per√≠odos (meses)
    # pv = valor presente (valor do cr√©dito)
    # O resultado √© negativo pois representa uma sa√≠da de dinheiro
    if taxa_juros_credito_mensal > 0:
        parcela_mensal_credito = -npf.pmt(
            taxa_juros_credito_mensal,
            prazo_credito_meses,
            valor_credito
        )
    else: # Se a taxa for 0, parcela √© simplesmente Valor/Prazo
         parcela_mensal_credito = valor_credito / prazo_credito_meses if prazo_credito_meses > 0 else 0

    total_pago_credito = parcela_mensal_credito * prazo_credito_meses + iof_total + tac_valor
    total_juros_pagos_credito = total_pago_credito - valor_credito


    # --- C√°lculos da Aplica√ß√£o Financeira ---
    # Rendimento bruto mensal da aplica√ß√£o
    rendimento_bruto_mensal_aplicacao = valor_aplicacao * taxa_rendimento_aplicacao_mensal

    # Rendimento bruto acumulado da aplica√ß√£o
    # Montante final = PV * (1 + taxa)^nper
    montante_final_aplicacao_bruto = valor_aplicacao * ((1 + taxa_rendimento_aplicacao_mensal)**prazo_credito_meses)
    rendimento_bruto_total_aplicacao = montante_final_aplicacao_bruto - valor_aplicacao

    # C√°lculo do IR sobre o rendimento bruto total
    ir_total_aplicacao = rendimento_bruto_total_aplicacao * ir_aliquota
    rendimento_liquido_total_aplicacao = rendimento_bruto_total_aplicacao - ir_total_aplicacao

    # Rendimento l√≠quido mensal aproximado
    rendimento_liquido_mensal_aplicacao = (rendimento_liquido_total_aplicacao / prazo_credito_meses) if prazo_credito_meses > 0 else 0


    # --- An√°lise Comparativa ---
    # Parcela L√≠quida Efetiva (Parcela do Cr√©dito - Rendimento L√≠quido Mensal da Aplica√ß√£o)
    parcela_liquida_efetiva = parcela_mensal_credito - rendimento_liquido_mensal_aplicacao

    # Ganho L√≠quido Total da Opera√ß√£o para o Cliente
    # √â o rendimento l√≠quido que o cliente ganha com a aplica√ß√£o MENOS os juros que ele paga no cr√©dito.
    ganho_liquido_total_operacao = rendimento_liquido_total_aplicacao - total_juros_pagos_credito


    # --- Exibi√ß√£o dos Resultados ---
    st.header("Resultados da Simula√ß√£o")

    col1, col2 = st.columns(2)

    with col1:
        st.metric("Valor do Cr√©dito", f"R$ {valor_credito:,.2f}")
        st.metric("Prazo (meses)", f"{prazo_credito_meses}")
        st.metric("Taxa de Juros do Cr√©dito (a.m.)", f"{taxa_juros_credito_input:,.2f}%") # Exibe o valor de entrada mensal
        st.metric("Parcela Mensal do Cr√©dito", f"R$ {parcela_mensal_credito:,.2f}")

    with col2:
        st.metric("Valor da Aplica√ß√£o em Garantia", f"R$ {valor_aplicacao:,.2f}")
        st.metric("Rendimento da Aplica√ß√£o (a.m.)", f"{taxa_rendimento_aplicacao_input:,.2f}%") # Exibe o valor de entrada mensal
        st.metric("IR sobre Aplica√ß√£o", f"{ir_aliquota*100:,.1f}%")
        st.metric("Rendimento L√≠quido Mensal da Aplica√ß√£o", f"R$ {rendimento_liquido_mensal_aplicacao:,.2f}")

    st.markdown("---")

    st.subheader("O Grande Destaque para o Cliente:")
    st.success(f"**Sua Parcela Mensal L√≠quida Efetiva (j√° descontando o rendimento da aplica√ß√£o) √© de:**")
    st.success(f"**R$ {parcela_liquida_efetiva:,.2f}**")
    st.info("Isso significa que, parte do valor da sua parcela de cr√©dito √© coberta pelo rendimento l√≠quido da sua aplica√ß√£o!")

    st.markdown("---")

    st.subheader("Resumo Financeiro da Opera√ß√£o")

    st.write(f"- **Juros Totais Pagos no Cr√©dito:** R$ {total_juros_pagos_credito:,.2f}")
    st.write(f"- **IOF Total:** R$ {iof_total:,.2f}")
    st.write(f"- **TAC:** R$ {tac_valor:,.2f}")
    st.write(f"- **Custo Total do Cr√©dito:** R$ {total_pago_credito:,.2f}")
    st.write(f"- **Rendimento Bruto Total da Aplica√ß√£o:** R$ {rendimento_bruto_total_aplicacao:,.2f}")
    st.write(f"- **Imposto de Renda Retido na Aplica√ß√£o:** R$ {ir_total_aplicacao:,.2f}")
    st.write(f"- **Rendimento L√≠quido Total da Aplica√ß√£o:** R$ {rendimento_liquido_total_aplicacao:,.2f}")
    st.write(f"- **Ganho L√≠quido Total da Opera√ß√£o (Rendimento L√≠quido - Juros Pagos):** R$ {ganho_liquido_total_operacao:,.2f}")

    if ganho_liquido_total_operacao >= 0:
        st.success("üéâ Esta opera√ß√£o de cr√©dito, considerando o rendimento da sua aplica√ß√£o, resulta em um ganho l√≠quido total para voc√™!")
    else:
        st.warning("‚ö†Ô∏è Esta opera√ß√£o de cr√©dito, considerando o rendimento da sua aplica√ß√£o, resulta em um custo l√≠quido total para voc√™.")


    # --- Observa√ß√µes importantes ---
    st.markdown("---")
    st.subheader("Observa√ß√µes Importantes:")
    st.info("""
        * Este simulador considera a **Tabela Price** para o c√°lculo da parcela do cr√©dito.
        * As taxas e tarifas utilizadas s√£o as inseridas na simula√ß√£o.
        * O Imposto de Renda sobre a aplica√ß√£o √© calculado sobre o rendimento total, com base na al√≠quota informada.
        * Esta simula√ß√£o n√£o considera outros custos como seguros ou taxas de manuten√ß√£o de conta.
        * O valor da aplica√ß√£o serve como garantia, mas continua rendendo para voc√™ durante o prazo do cr√©dito.
    """)